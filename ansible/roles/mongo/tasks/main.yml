---
# tasks file for mongo
# ssh -i ~/.ssh/bernard -N -L localhost:27019:10.130.109.75:27017 bernard@db01.spotnav.net
- name: add mongo db repo
  yum_repository:
    name: mongodb-org-4.0
    # name: becomes 'repo id' in repolist
    description: MongoDB Repository
    # description: becomes 'repo name' in repolist
    # file: defaults to name.repo
    baseurl: https://repo.mongodb.org/yum/redhat/$releasever/mongodb-org/4.0/x86_64
    gpgcheck: yes
    gpgkey: https://www.mongodb.org/static/pgp/server-4.0.asc
    # enabled: default is yes
    mode: 0644
    state: present

- name: install required python-pip to get tools
  yum:
    name: python-pip
    state: present
    update_cache: yes

- name: install required python packages
  pip:
    name: pymongo

- name: Set firewall rules for mongo
  firewalld:
    port: "{{ mongo_port }}/tcp"
    state: enabled
    zone: internal
    immediate: yes
    permanent: yes

- name: install mongo
  yum:
    name: mongodb-org
    state: present
    update_cache: yes

- name: configure mongo
  template:
    src: mongod.conf.j2
    dest: /etc/mongod.conf
    owner: root
    group: root
    mode: 0644
  notify: restart mongodb

- meta: flush_handlers

- name: ensure mongo started and enabled
  service: name=mongod state=started enabled=yes

- name: set up root user on mongo db
  when: mongo_authorization == "disabled"
  mongodb_user:
    login_host: "{{ ansible_eth1.ipv4.address }}"
    login_port: "{{ mongo_port }}"
    database: admin
    name: "{{ mongo_root_user.name }}"
    password: "{{ mongo_root_user.password }}"
    update_password: always
    roles: ["root", "clusterAdmin"]
    state: present

- name: set up other user on mongo db
  when: mongo_authorization == "disabled"
  mongodb_user:
    login_host: "{{ ansible_eth1.ipv4.address }}"
    login_port: "{{ mongo_port }}"
    database: admin
    name: "{{ mongo_user.name }}"
    password: "{{ mongo_user.password }}"
    update_password: always
    roles: "{{ mongo_user.roles }}"
    state: present
